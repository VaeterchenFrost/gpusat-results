Platform - 1
  1.1 CL_PLATFORM_NAME: NVIDIA CUDA
  1.2 CL_PLATFORM_VENDOR: NVIDIA Corporation
  1.3 CL_PLATFORM_VERSION: OpenCL 1.2 CUDA 10.1.120
  1.4 CL_PLATFORM_PROFILE: FULL_PROFILE
  1.5 CL_PLATFORM_EXTENSIONS: cl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_copy_opts cl_nv_create_buffer
  Device - 1:
    CL_DEVICE_NAME: GeForce RTX 2080
    CL_DEVICE_VENDOR: NVIDIA Corporation
    CL_DRIVER_VERSION: 430.50
    CL_DEVICE_VERSION: OpenCL 1.2 CUDA
    CL_DEVICE_MAX_COMPUTE_UNITS: 46
  Device - 2:
    CL_DEVICE_NAME: GeForce RTX 2080
    CL_DEVICE_VENDOR: NVIDIA Corporation
    CL_DRIVER_VERSION: 430.50
    CL_DEVICE_VERSION: OpenCL 1.2 CUDA
    CL_DEVICE_MAX_COMPUTE_UNITS: 46

-- treeDecomp Before --
bags: 31
0 : [9 13 16 24 25 28 31 48 ]-(1 2 )-
1 : [2 9 13 14 16 19 24 25 31 38 48 ]-(3 )-
2 : [13 16 21 24 28 31 ]()
3 : [2 13 14 15 16 17 19 24 25 30 31 33 38 48 ]-(4 5 6 )-
4 : [2 3 4 8 11 13 14 15 17 19 23 24 25 30 31 33 35 38 43 48 ]-(7 8 )-
5 : [14 15 16 30 33 47 ]()
6 : [2 13 16 18 31 33 38 ]()
7 : [3 4 8 11 12 13 14 15 17 19 23 24 25 30 31 35 38 43 ]-(9 10 11 )-
8 : [2 3 4 8 11 13 17 23 24 25 30 31 33 35 38 43 48 50 ]-(12 13 )-
9 : [8 12 31 35 38 43 44 ]()
10 : [4 8 12 14 15 17 23 27 ]-(14 )-
11 : [3 11 12 13 14 15 17 19 23 24 25 26 30 43 ]-(15 16 )-
12 : [2 17 22 30 35 50 ]()
13 : [2 3 4 8 11 13 20 23 24 25 31 33 35 38 43 48 50 ]-(17 18 )-
14 : [4 12 17 23 27 40 ]()
15 : [3 12 13 19 23 24 26 30 34 43 ]-(19 20 )-
16 : [3 11 14 15 17 25 26 45 ]-(21 )-
17 : [2 8 11 20 29 31 35 48 50 ]-(22 )-
18 : [3 4 11 13 20 23 24 25 33 35 37 38 43 48 50 ]-(23 )-
19 : [3 12 13 23 26 34 49 ]()
20 : [19 24 26 30 34 36 43 ]()
21 : [11 14 15 26 39 45 ]()
22 : [1 2 8 11 29 31 50 ]()
23 : [3 4 7 11 13 20 24 25 33 37 38 43 48 50 ]-(24 25 )-
24 : [3 4 7 13 20 33 37 43 46 ]-(26 )-
25 : [6 7 11 20 24 25 33 37 38 43 48 50 ]-(27 28 )-
26 : [4 7 13 20 33 41 43 46 ]-(29 )-
27 : [6 7 25 32 33 37 38 ]()
28 : [5 6 7 11 20 24 43 50 ]-(30 )-
29 : [4 7 10 20 41 46 ]()
30 : [5 6 20 24 42 43 ]()

-- treeDecomp after preprocessFacts--
bags: 31
0 : [9 13 16 24 25 28 31 48 ]-(1 2 )-
1 : [2 9 13 14 16 19 24 25 31 38 48 ]-(3 )-
2 : [13 16 21 24 28 31 ]()
3 : [2 13 14 15 16 17 19 24 25 30 31 33 38 48 ]-(4 5 6 )-
4 : [2 3 4 8 11 13 14 15 17 19 23 24 25 30 31 33 35 38 43 48 ]-(7 8 )-
5 : [14 15 16 30 33 47 ]()
6 : [2 13 16 18 31 33 38 ]()
7 : [3 4 8 11 12 13 14 15 17 19 23 24 25 30 31 35 38 43 ]-(9 10 11 )-
8 : [2 3 4 8 11 13 17 23 24 25 30 31 33 35 38 43 48 50 ]-(12 13 )-
9 : [8 12 31 35 38 43 44 ]()
10 : [4 8 12 14 15 17 23 27 ]-(14 )-
11 : [3 11 12 13 14 15 17 19 23 24 25 26 30 43 ]-(15 16 )-
12 : [2 17 22 30 35 50 ]()
13 : [2 3 4 8 11 13 20 23 24 25 31 33 35 38 43 48 50 ]-(17 18 )-
14 : [4 12 17 23 27 40 ]()
15 : [3 12 13 19 23 24 26 30 34 43 ]-(19 20 )-
16 : [3 11 14 15 17 25 26 45 ]-(21 )-
17 : [2 8 11 20 29 31 35 48 50 ]-(22 )-
18 : [3 4 11 13 20 23 24 25 33 35 37 38 43 48 50 ]-(23 )-
19 : [3 12 13 23 26 34 49 ]()
20 : [19 24 26 30 34 36 43 ]()
21 : [11 14 15 26 39 45 ]()
22 : [1 2 8 11 29 31 50 ]()
23 : [3 4 7 11 13 20 24 25 33 37 38 43 48 50 ]-(24 25 )-
24 : [3 4 7 13 20 33 37 43 46 ]-(26 )-
25 : [6 7 11 20 24 25 33 37 38 43 48 50 ]-(27 28 )-
26 : [4 7 13 20 33 41 43 46 ]-(29 )-
27 : [6 7 25 32 33 37 38 ]()
28 : [5 6 7 11 20 24 43 50 ]-(30 )-
29 : [4 7 10 20 41 46 ]()
30 : [5 6 20 24 42 43 ]()
---Determining datastructure---
input:
SOLUTIONTYPE : TREE
treeDecomp.width : 20
------
==> Entering solveProblem on id 0 <==
==> Entering solveProblem on id 1 <==
==> Entering solveProblem on id 3 <==
==> Entering solveProblem on id 4 <==
==> Entering solveProblem on id 7 <==
==> Entering solveProblem on id 9 <==
solveIF 7 + 0 => 9
  bag(9): bags= 0 , exp= 0 , correction= 0
  var= [8, 12, 31, 35, 38, 43, 44, ]
Solved IF-0 on node 9
  bag(9): bags= 1 , exp= 1 , correction= 0
  var= [8, 12, 31, 35, 38, 43, ]
==> Entering solveProblem on id 10 <==
==> Entering solveProblem on id 14 <==
solveIF 10 + 0 => 14
  bag(14): bags= 0 , exp= 0 , correction= 0
  var= [4, 12, 17, 23, 27, 40, ]
Solved IF-0 on node 14
  bag(14): bags= 1 , exp= 1 , correction= 0
  var= [4, 12, 17, 23, 27, ]
solveIF 7 + 14 => 10
  bag(10): bags= 0 , exp= 0 , correction= 0
  var= [4, 8, 12, 14, 15, 17, 23, 27, ]
  edges to [14, ]
Solved IF-1 on node 10
  bag(10): bags= 1 , exp= 1 , correction= 1
  var= [4, 8, 12, 14, 15, 17, 23, ]
  edges to [14, ]
Solved JOIN-0 on node 0
  bag(0): bags= 1 , exp= 0 , correction= 3
  var= [4, 8, 12, 14, 15, 17, 23, 31, 35, 38, 43, ]
==> Entering solveProblem on id 11 <==
==> Entering solveProblem on id 15 <==
==> Entering solveProblem on id 19 <==
solveIF 15 + 0 => 19
  bag(19): bags= 0 , exp= 0 , correction= 0
  var= [3, 12, 13, 23, 26, 34, 49, ]
Solved IF-0 on node 19
  bag(19): bags= 1 , exp= 1 , correction= 0
  var= [3, 12, 13, 23, 26, 34, ]
==> Entering solveProblem on id 20 <==
solveIF 15 + 0 => 20
  bag(20): bags= 0 , exp= 0 , correction= 0
  var= [19, 24, 26, 30, 34, 36, 43, ]
Solved IF-0 on node 20
  bag(20): bags= 1 , exp= 1 , correction= 0
  var= [19, 24, 26, 30, 34, 43, ]
Solved JOIN-1 on nodes 19~20
  bag(0): bags= 1 , exp= 0 , correction= 2
  var= [3, 12, 13, 19, 23, 24, 26, 30, 34, 43, ]
solveIF 11 + 0 => 15
  bag(15): bags= 0 , exp= 0 , correction= 0
  var= [3, 12, 13, 19, 23, 24, 26, 30, 34, 43, ]
  edges to [0, 20, ]
Solved JOIN-IF on node 15
  bag(15): bags= 1 , exp= 1 , correction= 2
  var= [3, 12, 13, 19, 23, 24, 26, 30, 43, ]
  edges to [0, 20, ]
==> Entering solveProblem on id 16 <==
==> Entering solveProblem on id 21 <==
solveIF 16 + 0 => 21
  bag(21): bags= 0 , exp= 0 , correction= 0
  var= [11, 14, 15, 26, 39, 45, ]
Solved IF-0 on node 21
  bag(21): bags= 1 , exp= 1 , correction= 0
  var= [11, 14, 15, 26, 45, ]
solveIF 11 + 21 => 16
  bag(16): bags= 0 , exp= 0 , correction= 0
  var= [3, 11, 14, 15, 17, 25, 26, 45, ]
  edges to [21, ]
Solved IF-1 on node 16
  bag(16): bags= 1 , exp= 1 , correction= 1
  var= [3, 11, 14, 15, 17, 25, 26, ]
  edges to [21, ]
Solved JOIN-1 on nodes 15~16
  bag(0): bags= 1 , exp= -1 , correction= 5
  var= [3, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 26, 30, 43, ]
solveIF 7 + 0 => 11
  bag(11): bags= 0 , exp= 0 , correction= 0
  var= [3, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 26, 30, 43, ]
  edges to [0, 16, ]
Solved JOIN-IF on node 11
  bag(11): bags= 1 , exp= 1 , correction= 4
  var= [3, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 30, 43, ]
  edges to [0, 16, ]
Solved JOIN-1 on nodes 0~11
  bag(0): bags= 1 , exp= 0 , correction= 8
  var= [3, 4, 8, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 30, 31, 35, 38, 43, ]
solveIF 4 + 0 => 7
  bag(7): bags= 0 , exp= 0 , correction= 0
  var= [3, 4, 8, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 30, 31, 35, 38, 43, ]
  edges to [0, 10, 11, ]
Solved JOIN-IF on node 7
  bag(7): bags= 1 , exp= 0 , correction= 8
  var= [3, 4, 8, 11, 13, 14, 15, 17, 19, 23, 24, 25, 30, 31, 35, 38, 43, ]
  edges to [0, 10, 11, ]
==> Entering solveProblem on id 8 <==
==> Entering solveProblem on id 12 <==
solveIF 8 + 0 => 12
  bag(12): bags= 0 , exp= 0 , correction= 0
  var= [2, 17, 22, 30, 35, 50, ]
Solved IF-0 on node 12
  bag(12): bags= 1 , exp= 1 , correction= 0
  var= [2, 17, 30, 35, 50, ]
==> Entering solveProblem on id 13 <==
==> Entering solveProblem on id 17 <==
==> Entering solveProblem on id 22 <==
solveIF 17 + 0 => 22
  bag(22): bags= 0 , exp= 0 , correction= 0
  var= [1, 2, 8, 11, 29, 31, 50, ]
Solved IF-0 on node 22
  bag(22): bags= 1 , exp= 1 , correction= 0
  var= [2, 8, 11, 29, 31, 50, ]
solveIF 13 + 22 => 17
  bag(17): bags= 0 , exp= 0 , correction= 0
  var= [2, 8, 11, 20, 29, 31, 35, 48, 50, ]
  edges to [22, ]
Solved IF-1 on node 17
  bag(17): bags= 1 , exp= 1 , correction= 1
  var= [2, 8, 11, 20, 31, 35, 48, 50, ]
  edges to [22, ]
==> Entering solveProblem on id 18 <==
==> Entering solveProblem on id 23 <==
==> Entering solveProblem on id 24 <==
==> Entering solveProblem on id 26 <==
==> Entering solveProblem on id 29 <==
solveIF 26 + 0 => 29
  bag(29): bags= 0 , exp= 0 , correction= 0
  var= [4, 7, 10, 20, 41, 46, ]
Solved IF-0 on node 29
  bag(29): bags= 1 , exp= 1 , correction= 0
  var= [4, 7, 20, 41, 46, ]
solveIF 24 + 29 => 26
  bag(26): bags= 0 , exp= 0 , correction= 0
  var= [4, 7, 13, 20, 33, 41, 43, 46, ]
  edges to [29, ]
Solved IF-1 on node 26
  bag(26): bags= 1 , exp= 1 , correction= 1
  var= [4, 7, 13, 20, 33, 43, 46, ]
  edges to [29, ]
solveIF 23 + 26 => 24
  bag(24): bags= 0 , exp= 0 , correction= 0
  var= [3, 4, 7, 13, 20, 33, 37, 43, 46, ]
  edges to [26, ]
Solved IF-1 on node 24
  bag(24): bags= 1 , exp= 0 , correction= 2
  var= [3, 4, 7, 13, 20, 33, 37, 43, ]
  edges to [26, ]
==> Entering solveProblem on id 25 <==
==> Entering solveProblem on id 27 <==
solveIF 25 + 0 => 27
  bag(27): bags= 0 , exp= 0 , correction= 0
  var= [6, 7, 25, 32, 33, 37, 38, ]
Solved IF-0 on node 27
  bag(27): bags= 1 , exp= 1 , correction= 0
  var= [6, 7, 25, 33, 37, 38, ]
==> Entering solveProblem on id 28 <==
==> Entering solveProblem on id 30 <==
solveIF 28 + 0 => 30
  bag(30): bags= 0 , exp= 0 , correction= 0
  var= [5, 6, 20, 24, 42, 43, ]
Solved IF-0 on node 30
  bag(30): bags= 1 , exp= 1 , correction= 0
  var= [5, 6, 20, 24, 43, ]
solveIF 25 + 30 => 28
  bag(28): bags= 0 , exp= 0 , correction= 0
  var= [5, 6, 7, 11, 20, 24, 43, 50, ]
  edges to [30, ]
Solved IF-1 on node 28
  bag(28): bags= 1 , exp= 1 , correction= 1
  var= [6, 7, 11, 20, 24, 43, 50, ]
  edges to [30, ]
Solved JOIN-1 on nodes 27~28
  bag(0): bags= 1 , exp= 0 , correction= 3
  var= [6, 7, 11, 20, 24, 25, 33, 37, 38, 43, 50, ]
solveIF 23 + 0 => 25
  bag(25): bags= 0 , exp= 0 , correction= 0
  var= [6, 7, 11, 20, 24, 25, 33, 37, 38, 43, 48, 50, ]
  edges to [0, 28, ]
Solved JOIN-IF on node 25
  bag(25): bags= 1 , exp= 1 , correction= 3
  var= [7, 11, 20, 24, 25, 33, 37, 38, 43, 48, 50, ]
  edges to [0, 28, ]
Solved JOIN-1 on nodes 24~25
  bag(0): bags= 1 , exp= -1 , correction= 6
  var= [3, 4, 7, 11, 13, 20, 24, 25, 33, 37, 38, 43, 48, 50, ]
solveIF 18 + 0 => 23
  bag(23): bags= 0 , exp= 0 , correction= 0
  var= [3, 4, 7, 11, 13, 20, 24, 25, 33, 37, 38, 43, 48, 50, ]
  edges to [0, 25, ]
Solved JOIN-IF on node 23
  bag(23): bags= 1 , exp= 1 , correction= 5
  var= [3, 4, 11, 13, 20, 24, 25, 33, 37, 38, 43, 48, 50, ]
  edges to [0, 25, ]
solveIF 13 + 23 => 18
  bag(18): bags= 0 , exp= 0 , correction= 0
  var= [3, 4, 11, 13, 20, 23, 24, 25, 33, 35, 37, 38, 43, 48, 50, ]
  edges to [23, ]
Solved IF-1 on node 18
  bag(18): bags= 1 , exp= 1 , correction= 6
  var= [3, 4, 11, 13, 20, 23, 24, 25, 33, 35, 38, 43, 48, 50, ]
  edges to [23, ]
Solved JOIN-1 on nodes 17~18
  bag(0): bags= 1 , exp= 0 , correction= 9
  var= [2, 3, 4, 8, 11, 13, 20, 23, 24, 25, 31, 33, 35, 38, 43, 48, 50, ]
solveIF 8 + 0 => 13
  bag(13): bags= 0 , exp= 0 , correction= 0
  var= [2, 3, 4, 8, 11, 13, 20, 23, 24, 25, 31, 33, 35, 38, 43, 48, 50, ]
  edges to [0, 18, ]
Solved JOIN-IF on node 13
  bag(13): bags= 1 , exp= 0 , correction= 9
  var= [2, 3, 4, 8, 11, 13, 23, 24, 25, 31, 33, 35, 38, 43, 48, 50, ]
  edges to [0, 18, ]
Solved JOIN-1 on nodes 12~13
  bag(0): bags= 1 , exp= 0 , correction= 10
  var= [2, 3, 4, 8, 11, 13, 17, 23, 24, 25, 30, 31, 33, 35, 38, 43, 48, 50, ]
solveIF 4 + 0 => 8
  bag(8): bags= 0 , exp= 0 , correction= 0
  var= [2, 3, 4, 8, 11, 13, 17, 23, 24, 25, 30, 31, 33, 35, 38, 43, 48, 50, ]
  edges to [0, 13, ]
Solved JOIN-IF on node 8
  bag(8): bags= 1 , exp= 1 , correction= 10
  var= [2, 3, 4, 8, 11, 13, 17, 23, 24, 25, 30, 31, 33, 35, 38, 43, 48, ]
  edges to [0, 13, ]
Solved JOIN-1 on nodes 7~8
  bag(0): bags= 1 , exp= -3 , correction= 19
  var= [2, 3, 4, 8, 11, 13, 14, 15, 17, 19, 23, 24, 25, 30, 31, 33, 35, 38, 43, 48, ]
solveIF 3 + 0 => 4
  bag(4): bags= 0 , exp= 0 , correction= 0
  var= [2, 3, 4, 8, 11, 13, 14, 15, 17, 19, 23, 24, 25, 30, 31, 33, 35, 38, 43, 48, ]
  edges to [0, 8, ]
Solved JOIN-IF on node 4
  bag(4): bags= 1 , exp= 4 , correction= 16
  var= [2, 13, 14, 15, 17, 19, 24, 25, 30, 31, 33, 38, 48, ]
  edges to [0, 8, ]
==> Entering solveProblem on id 5 <==
solveIF 3 + 0 => 5
  bag(5): bags= 0 , exp= 0 , correction= 0
  var= [14, 15, 16, 30, 33, 47, ]
Solved IF-0 on node 5
  bag(5): bags= 1 , exp= 1 , correction= 0
  var= [14, 15, 16, 30, 33, ]
Solved JOIN-0 on node 0
  bag(0): bags= 1 , exp= -1 , correction= 21
  var= [2, 13, 14, 15, 16, 17, 19, 24, 25, 30, 31, 33, 38, 48, ]
==> Entering solveProblem on id 6 <==
solveIF 3 + 0 => 6
  bag(6): bags= 0 , exp= 0 , correction= 0
  var= [2, 13, 16, 18, 31, 33, 38, ]
Solved IF-0 on node 6
  bag(6): bags= 1 , exp= 1 , correction= 0
  var= [2, 13, 16, 31, 33, 38, ]
Solved JOIN-1 on nodes 0~6
  bag(0): bags= 1 , exp= -2 , correction= 21
  var= [2, 13, 14, 15, 16, 17, 19, 24, 25, 30, 31, 33, 38, 48, ]
solveIF 1 + 0 => 3
  bag(3): bags= 0 , exp= 0 , correction= 0
  var= [2, 13, 14, 15, 16, 17, 19, 24, 25, 30, 31, 33, 38, 48, ]
  edges to [0, 5, 6, ]
Solved JOIN-IF on node 3
  bag(3): bags= 1 , exp= 2 , correction= 19
  var= [2, 13, 14, 16, 19, 24, 25, 31, 38, 48, ]
  edges to [0, 5, 6, ]
solveIF 0 + 3 => 1
  bag(1): bags= 0 , exp= 0 , correction= 0
  var= [2, 9, 13, 14, 16, 19, 24, 25, 31, 38, 48, ]
  edges to [3, ]
Solved IF-1 on node 1
  bag(1): bags= 1 , exp= 1 , correction= 21
  var= [9, 13, 16, 24, 25, 31, 48, ]
  edges to [3, ]
==> Entering solveProblem on id 2 <==
solveIF 0 + 0 => 2
  bag(2): bags= 0 , exp= 0 , correction= 0
  var= [13, 16, 21, 24, 28, 31, ]
Solved IF-0 on node 2
  bag(2): bags= 1 , exp= 1 , correction= 0
  var= [13, 16, 24, 28, 31, ]
Solved JOIN-1 on nodes 1~2
  bag(0): bags= 1 , exp= -15 , correction= 23
  var= [9, 13, 16, 24, 25, 28, 31, 48, ]
solveIF 0 + 0 => 0
  bag(0): bags= 0 , exp= 0 , correction= 0
  var= [9, 13, 16, 24, 25, 28, 31, 48, ]
  edges to [0, 2, ]
Solved JOIN-IF on node 0
  bag(0): bags= 1 , exp= -8 , correction= 8
  var= [9, 13, 16, 24, 25, 28, 31, 48, ]
  edges to [0, 2, ]

==== GRAPH END ====

--- Solutions: ---
bag 0   (from 0 to 255)
id: 0 count: 0
id: 1 count: 0
id: 2 count: 0
id: 3 count: 0
id: 4 count: 0
id: 5 count: 0
id: 6 count: 0
id: 7 count: 0
id: 8 count: 0
id: 9 count: 0
...

{
    "Num Join": 12
    ,"Num Introduce Forget": 31
    ,"max Table Size": 153985
    ,"Model Count": 1
    ,"Time":{
        "Decomposing": 0.02
        ,"Solving": 3.59
        ,"Total": 6.186
    }
}
